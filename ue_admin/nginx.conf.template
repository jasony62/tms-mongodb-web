user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $request_time $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #gzip  on;
    
    # 定义连接基数区域，10m 可以储存 320000 个并发会话
    limit_conn_zone $remote_addr zone=connip:$NGINX_LIMIT_CONN_ZONE;
    # #是限制每个IP只能发起8000个并发连接
    limit_conn connip $NGINX_LIMIT_CONN_CONNIP;
    # 指定当触发limit的时候日志打印级别
    limit_conn_log_level $NGINX_LIMIT_CONN_LOG_LEVEL;
    # 回复被禁用的连接请求时的状态码
    limit_conn_status $NGINX_LIMIT_CONN_STATUS;
    # 达到阀值后开始限速(字节)
    limit_rate_after $NGINX_LIMIT_RATE_AFTER;
    # 限制向客户端传输数据的速度(Byte/s)
    limit_rate $NGINX_LIMIT_RATE;
    # 指定等待client发送一个包体的超时时间
    client_body_timeout $NGINX_CLIENT_BODY_TIMEOUT;
    # 指定等待client发送一个包头的超时时间
    client_header_timeout $NGINX_CLIENT_HEADER_TIMEOUT;
    # keep-alive连接超时时间
    keepalive_timeout $NGINX_KEEPALIVE_TIMEOUT;
    # 服务端向客户端传输数据的超时时间
    send_timeout $NGINX_SEND_TIMEOUT;
    # 隐藏版本号
    server_tokens $NGINX_SERVER_TOKENS;
    # 发生错误时返回指定错误页
    error_page 400 404 413 /40x.html;
    error_page 500 502 503 504 /50.html;

    server {
        listen       80;
        server_name  localhost;
        root   /usr/share/nginx/html;

        location $NGINX_WEB_BASE_URL {
            index index.html;
            try_files $uri $uri/ $NGINX_WEB_BASE_URL/index.html;
        }

        location / {
            proxy_pass $NGINX_BACK_BASE_URL;
        }

    }

}